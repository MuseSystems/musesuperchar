/*************************************************************************
 *************************************************************************
 **
 ** File:         update_scgrp_qt_ui_files.sql
 ** Project:      Muse Systems Super Characteristics for xTuple ERP
 ** Author:       Steven C. Buttgereit
 **
 ** (C) 2017 Lima Buttgereit Holdings LLC d/b/a Muse Systems
 **
 ** Contact:
 ** muse.information@musesystems.com  :: https://muse.systems
 ** 
 ** License: MIT License. See LICENSE.md for complete licensing details.
 **
 *************************************************************************
 ************************************************************************/

--
-- Causes an update of the database generated Qt UI related files to be
-- regenerated and updated in the database.
--

CREATE OR REPLACE FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint) 
    RETURNS void AS
        $BODY$
            DECLARE
                vCfgPfx text := musextputils.get_musemetric('musesuperchar','widgetPrefix',null::text);
                vScGrpIntName text;
                vUiForm xml;
                vUiFormName text;
            BEGIN

                SELECT scgrp_internal_name INTO vScGrpIntName 
                FROM musesuperchar.scgrp
                WHERE scgrp_id = pGroupId;

                IF vScGrpIntName IS NULL THEN
                    RAISE EXCEPTION 'We require a valid Group ID in order to update its Qt UI related files. (FUNC: musesuperchar.update_scgrp_qt_ui_files) (pGroupId: %)',pGroupId;
                END IF;

                vUiFormName := vCfgPfx||'_'||vScGrpIntName;

                -- We do different things depending on if we have Group Layout 
                -- Records or not.  If so, we update the layout.  If not, we go
                -- on and delete the related Qt UI related files.
                IF NOT EXISTS (SELECT true
                                FROM musesuperchar.scdef_scgrp_ass 
                                WHERE scdef_scgrp_ass_scgrp_id = pGroupId) THEN
                    DELETE FROM musesuperchar.pkguiform
                        WHERE uiform_name = vUiFormName
                            AND uiform_order = 0;

                    DELETE FROM musesuperchar.pkgscript
                        WHERE script_name = vUiFormName
                            AND script_order = 0;
                ELSE
                    vUiForm := musesuperchar.get_qt_ui_xml(
                        musesuperchar.get_group_layout_structure(pGroupId));

                    -- Now we either insert or update the files; would love to 
                    -- do INSERT ON CONFLICT, but our required keys are not
                    -- unique indexed :-(
                    IF NOT EXISTS (SELECT true
                                   FROM musesuperchar.pkguiform
                                   WHERE uiform_name = vUiFormName
                                        AND uiform_order = 0) THEN
                        INSERT INTO musesuperchar.pkguiform 
                            (uiform_name   
                            ,uiform_order  
                            ,uiform_enabled
                            ,uiform_source 
                            ,uiform_notes)
                        VALUES
                            (vUiFormName
                            ,0
                            ,true 
                            ,'<?xml version="1.0" encoding="UTF-8"?>'||vUiForm::text
                            ,'Autogenerated Super Charateristics Form, Last Updated: '||
                                now());
                    ELSE
                        UPDATE   musesuperchar.pkguiform
                           SET   uiform_source = 
                                    '<?xml version="1.0" encoding="UTF-8"?>'||
                                    vUiForm::text
                                ,uiform_notes = 
                                    'Autogenerated Super Charateristics Form, Last Updated: '||
                                    now()
                        WHERE    uiform_name = vUiFormName
                            AND  uiform_order = 0;
                    END IF;

                END IF;

            END;
        $BODY$
    LANGUAGE plpgsql VOLATILE;

ALTER FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint)
    OWNER TO admin;

REVOKE EXECUTE ON FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint) FROM public;
GRANT EXECUTE ON FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint) TO admin;
GRANT EXECUTE ON FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint) TO xtrole;


COMMENT ON FUNCTION musesuperchar.update_scgrp_qt_ui_files(pGroupId bigint) 
    IS $DOC$Causes an update of the database generated Qt UI related files to be regenerated and updated in the database.$DOC$;
